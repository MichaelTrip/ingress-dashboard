apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-dashboard
  labels:
    app: ingress-dashboard
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ingress-dashboard
  template:
    metadata:
      labels:
        app: ingress-dashboard
    spec:
      serviceAccountName: ingress-dashboard-sa
      containers:
      - name: ingress-dashboard
        image: ghcr.io/michaeltrip/ingress-dashboard:v0.1.0-20250113195517
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: ingress-dashboard
spec:
  selector:
    app: ingress-dashboard
  ports:
  - port: 80
    targetPort: 5000
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-dashboard-sa

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingress-dashboard-role
rules:
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-dashboard-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-dashboard-role
subjects:
- kind: ServiceAccount
  name: ingress-dashboard-sa
  namespace: default
